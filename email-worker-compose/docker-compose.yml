# ultima versão do docker compose
version: '3'
volumes:
    dados:
networks:
    banco:
    web:
    fila:
services:
    #serviço de banco de dados
    db:
        #baixando a imagem do postgress
        image: postgres:9.6
        volumes:
            # Volume dos dados
            - dados:/var/lib/postgresql/data
            # Scripts
            - ./scripts:/scripts
            - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
        networks:
            - banco
        #fix para rodar o postgress sem usuario e senha localhost
        environment:
            - POSTGRES_HOST_AUTH_METHOD=trust
    #criar novo serviço se baseando em nginx
    frontend:
        image: nginx:1.13
        volumes:
            #Site local : servidor
            - ./web:/usr/share/nginx/html
            #Configuracao do proxy reverso
            #mapeamento de volume de um arquivo para outro arquivo local : pasta default nginx 1.13
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        ports:
            - 80:80
        networks:
            - web
        depends_on: 
        #docker compose up a
        #orquestra a inicializacao dos servicos
        #starta os servicos que tem dependencia
            - app
    app:
        image: python:3.6
        volumes:
            #Aplicação local:container
            - ./app:/app
        working_dir: /app
        command: bash ./app.sh 
        #ports:
        #    - 8080:8080 #porta definida no sender
        networks:
            - banco
            - web
            - fila
        depends_on: 
            - db
            - queue 
            #personalizando nome do banco de dados
        environment: 
            - DB_NAME=XYZ_ZZZZemail_sender
    queue:
        image: redis:3.2
        networks:
            - fila
    worker:
        # image: python:3.6
        build: worker
        volumes:
            # Worker
            - ./worker:/worker
        working_dir: /worker
        #command: bash ./app.sh
        command: worker.py
        networks: 
            - fila
        depends_on: 
            - queue